

1) How large of a puzzle can your program typically solve within 10 seconds using A*?  Using greedy hill climbing?
A 5x5 board can be solved within 10 seconds using A*. Solving a 6x6 board with A* took 100 seconds.

2) What is the effective branching factor?  For this computation, perform 10 runs of a puzzle half the maximum size you calculated for step #1.    
<<<< TODO >>>>> Not sure if I'm calculating branching factor correctly for A*.

3) Compute the branching factor using H1 for A* and greedy search


4) Compute the branching factor using H2 for A* and greedy search

5) Which approach comes up with cheaper solution paths?  Why?

6) Which approach typically takes less time?  Why?

7) Either prove the heuristic H2 for A* is admissible, or provide a counterexample demonstrating that it is not.
